---
# variables for ansible-roles/ec2-create-group
ec2_group_name: sharepointdev
ec2_region: us-east-1
ec2_vpc_name: sharepointvpc
ec2_vpc_block: 10.10.0.0/16

# EC2 Security Group Rules for opening ports.
# All ports are accessible only from your current IP address.
ec2_ports:
 - { proto: "tcp", from: "80", to: "80" }
 - { proto: "tcp", from: "22", to: "22" }
 - { proto: "tcp", from: "8080", to: "8080" }
 - { proto: "tcp", from: "5986", to: "5986" }
 - { proto: "tcp", from: "1433", to: "1433" }

# Dictionary of subnet address spaces.
# Each key here must match the key in "vms" dictionary below.
ec2_subnets:
  sp:
    cidr: 10.10.0.0/28
  db:
    cidr: 10.10.0.16/28

# Dictionary of VMs.
vms:
  sp:
    instance_type: t2.large
    idempotent_token: 1VpOzwrOpQIU0cuO6fdQ
    count: 1
    cidr: "{{ec2_subnets.sp.cidr}}"
    tags:
      Name: sharepoint
      Desc: Sharepoint Server

# For details of token, see
# https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html
# CLient Token is used to pass the idempotent token as well as decide the instance ID.
client_tokens:
  sp: 0098cd38117ac3esp
  db: 49ce338403c09cfdb
  ad: 1cad9efa2df97aead

user_data: |
  <powershell>
  $admin = [adsi]("WinNT://./administrator, user")
  $admin.PSBase.Invoke("SetPassword", "{{vault_win_admin_pass}}")
  Invoke-Expression ((New-Object System.Net.Webclient).DownloadString('https://raw.githubusercontent.com/ansible/ansible/devel/examples/scripts/ConfigureRemotingForAnsible.ps1'))
  </powershell>
